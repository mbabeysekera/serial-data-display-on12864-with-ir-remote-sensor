
atmega-32-lcd12864-ir-serial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000e18  00000ecc  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000ecc  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000efb  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000168  00000000  00000000  00000f09  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000234e  00000000  00000000  00001071  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007be  00000000  00000000  000033bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001024  00000000  00000000  00003b7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004c8  00000000  00000000  00004ba4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001da  00000000  00000000  0000506c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000017ba  00000000  00000000  00005246  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001b8  00000000  00000000  00006a00  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000df6  00000df6  00000eaa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00006bb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.initDebugLED 0000000e  00000dca  00000dca  00000e7e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.lcdCommandEnablePulse 00000020  00000d4a  00000d4a  00000dfe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.lcdCommand 0000004e  00000bc4  00000bc4  00000c78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.lcdGraphicDisplayClearAll 00000046  00000ca6  00000ca6  00000d5a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.initLCD128X64 00000064  00000b60  00000b60  00000c14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.lcdCursorSet 0000004a  00000c12  00000c12  00000cc6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.lcdPrint 0000002e  00000d1c  00000d1c  00000dd0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.lcdNormalMode 0000000a  00000dd8  00000dd8  00000e8c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.lcdClear 00000012  00000db8  00000db8  00000e6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.lcdGraphicsMode 0000000a  00000de2  00000de2  00000e96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.lcdDrawGraphics 0000000a  00000dec  00000dec  00000ea0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.lcdPixelCordinate 00000018  00000d8a  00000d8a  00000e3e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.strLength 00000020  00000d6a  00000d6a  00000e1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.getIndexerForProvidedNumericCharacter 00000004  00000dfa  00000dfa  00000eae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.getIndexerForProvidedNumericSpecialCharacter 00000030  00000cec  00000cec  00000da0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.getIndexerForProvidedCapitalAlphaCharacter 00000004  00000dfe  00000dfe  00000eb2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.getIndexerForProvidedSimpleAlphaCharacter 00000004  00000e02  00000e02  00000eb6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.getIndexerByCharacterType 00000096  00000a60  00000a60  00000b14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .rodata       00000008  00800060  00000e10  00000ec4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 33 .text.numberGenerator5x8 0000025a  00000320  00000320  000003d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.renderGraphics 0000015c  0000057a  0000057a  0000062e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.allFrame 000000aa  00000914  00000914  000009c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.__vector_10 0000004a  00000c5c  00000c5c  00000d10  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.__vector_6 000000be  000007a0  000007a0  00000854  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.notificationIconFormatter 000000b6  0000085e  0000085e  00000912  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.notificationIconsProcessor 000000a2  000009be  000009be  00000a72  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .progmemx.data 00000016  000002c2  000002c2  00000376  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 41 .text.numberDisplayTest 0000006a  00000af6  00000af6  00000baa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.main    000000ca  000006d6  000006d6  0000078a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .bss.isIRAvailable 00000001  00800070  00800070  00000ecc  2**0
                  ALLOC
 44 .bss.counter  00000001  00800071  00800071  00000ecc  2**0
                  ALLOC
 45 .bss.irReceiveData 00000004  00800068  00800068  00000ecc  2**0
                  ALLOC
 46 .bss.ticks    00000004  0080006c  0080006c  00000ecc  2**0
                  ALLOC
 47 .progmemx.data.citronLogo 000000c6  00000184  00000184  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 48 .progmemx.data.batteryFull 00000010  000002d8  000002d8  0000038c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 49 .progmemx.data.messageIcon 00000008  000002e8  000002e8  0000039c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 50 .progmemx.data.bellIcon 00000008  000002f0  000002f0  000003a4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 51 .progmemx.data.connectedIcon 00000008  000002f8  000002f8  000003ac  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 52 .progmemx.data.clockIcon 00000008  00000300  00000300  000003b4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 53 .progmemx.data.alertIcon 00000008  00000308  00000308  000003bc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 54 .progmemx.data.irSensorReceiveEnable 00000008  00000310  00000310  000003c4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 55 .progmemx.data.smallIconReset 00000008  00000318  00000318  000003cc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 56 .progmemx.data.capitalLetters_5x8 000000d0  000000b4  000000b4  00000168  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 57 .progmemx.data.number_5x8 00000078  0000024a  0000024a  000002fe  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 58 .text.__dummy_fini 00000002  00000e0a  00000e0a  00000ebe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.__dummy_funcs_on_exit 00000002  00000e0c  00000e0c  00000ec0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.__dummy_simulator_exit 00000002  00000e0e  00000e0e  00000ec2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.exit    00000016  00000da2  00000da2  00000e56  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text._Exit   00000004  00000e06  00000e06  00000eba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 30 00 	jmp	0x60	; 0x60 <__ctors_end>
   4:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
   8:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
   c:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  10:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  14:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  18:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__vector_6>
  1c:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  20:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  24:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  28:	0c 94 2e 06 	jmp	0xc5c	; 0xc5c <__vector_10>
  2c:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  30:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  34:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  38:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  3c:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  40:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  44:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  48:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  4c:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>
  50:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 68       	ori	r16, 0x80	; 128
  58:	00 0e       	add	r0, r16
  5a:	10 00       	.word	0x0010	; ????
  5c:	68 00       	.word	0x0068	; ????
  5e:	72 80       	ldd	r7, Z+2	; 0x02

00000060 <__ctors_end>:
  60:	11 24       	eor	r1, r1
  62:	1f be       	out	0x3f, r1	; 63
  64:	cf e5       	ldi	r28, 0x5F	; 95
  66:	d8 e0       	ldi	r29, 0x08	; 8
  68:	de bf       	out	0x3e, r29	; 62
  6a:	cd bf       	out	0x3d, r28	; 61

0000006c <__do_copy_data>:
  6c:	e4 e5       	ldi	r30, 0x54	; 84
  6e:	f0 e0       	ldi	r31, 0x00	; 0
  70:	40 e0       	ldi	r20, 0x00	; 0
  72:	17 c0       	rjmp	.+46     	; 0xa2 <__do_clear_bss+0x8>
  74:	b5 91       	lpm	r27, Z+
  76:	a5 91       	lpm	r26, Z+
  78:	35 91       	lpm	r19, Z+
  7a:	25 91       	lpm	r18, Z+
  7c:	05 91       	lpm	r16, Z+
  7e:	07 fd       	sbrc	r16, 7
  80:	0c c0       	rjmp	.+24     	; 0x9a <__do_clear_bss>
  82:	95 91       	lpm	r25, Z+
  84:	85 91       	lpm	r24, Z+
  86:	ef 01       	movw	r28, r30
  88:	f9 2f       	mov	r31, r25
  8a:	e8 2f       	mov	r30, r24
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	a2 17       	cp	r26, r18
  92:	b3 07       	cpc	r27, r19
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0x20>
  96:	fe 01       	movw	r30, r28
  98:	04 c0       	rjmp	.+8      	; 0xa2 <__do_clear_bss+0x8>

0000009a <__do_clear_bss>:
  9a:	1d 92       	st	X+, r1
  9c:	a2 17       	cp	r26, r18
  9e:	b3 07       	cpc	r27, r19
  a0:	e1 f7       	brne	.-8      	; 0x9a <__do_clear_bss>
  a2:	e0 36       	cpi	r30, 0x60	; 96
  a4:	f4 07       	cpc	r31, r20
  a6:	31 f7       	brne	.-52     	; 0x74 <__do_copy_data+0x8>
  a8:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <main>
  ac:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <exit>

000000b0 <_exit>:
  b0:	f8 94       	cli

000000b2 <__stop_program>:
  b2:	ff cf       	rjmp	.-2      	; 0xb2 <__stop_program>

Disassembly of section .text:

00000df6 <__bad_interrupt>:
 df6:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.initDebugLED:

00000dca <initDebugLED>:
#endif
#pragma once
#include <util/delay.h>

void initDebugLED() {
	PORTD |= (1 << DEBUG_LED);
 dca:	82 b3       	in	r24, 0x12	; 18
 dcc:	80 68       	ori	r24, 0x80	; 128
 dce:	82 bb       	out	0x12, r24	; 18
	DDRD |= (1 << DEBUG_LED);
 dd0:	81 b3       	in	r24, 0x11	; 17
 dd2:	80 68       	ori	r24, 0x80	; 128
 dd4:	81 bb       	out	0x11, r24	; 17
 dd6:	08 95       	ret

Disassembly of section .text.lcdCommandEnablePulse:

00000d4a <lcdCommandEnablePulse>:
		value = 0x20;
	}
	lcdCommand(INSTRUCTION_MODE, INS_LCD12864_FUNCTION_SET_EX);
	lcdCommand(INSTRUCTION_MODE, INS_LCD12864_VERTICAL_SCROLL);
	lcdCommand(INSTRUCTION_MODE, 0b01000000 | value);
}
 d4a:	8b b3       	in	r24, 0x1b	; 27
 d4c:	84 60       	ori	r24, 0x04	; 4
 d4e:	8b bb       	out	0x1b, r24	; 27
 d50:	85 e0       	ldi	r24, 0x05	; 5
 d52:	8a 95       	dec	r24
 d54:	f1 f7       	brne	.-4      	; 0xd52 <lcdCommandEnablePulse+0x8>
 d56:	00 00       	nop
 d58:	8b b3       	in	r24, 0x1b	; 27
 d5a:	8b 7f       	andi	r24, 0xFB	; 251
 d5c:	8b bb       	out	0x1b, r24	; 27
 d5e:	85 e0       	ldi	r24, 0x05	; 5
 d60:	8a 95       	dec	r24
 d62:	f1 f7       	brne	.-4      	; 0xd60 <lcdCommandEnablePulse+0x16>
 d64:	00 00       	nop
 d66:	1b ba       	out	0x1b, r1	; 27
 d68:	08 95       	ret

Disassembly of section .text.lcdCommand:

00000bc4 <lcdCommand>:
 bc4:	cf 93       	push	r28
 bc6:	c6 2f       	mov	r28, r22
 bc8:	88 23       	and	r24, r24
 bca:	79 f0       	breq	.+30     	; 0xbea <lcdCommand+0x26>
 bcc:	86 2f       	mov	r24, r22
 bce:	80 7f       	andi	r24, 0xF0	; 240
 bd0:	81 60       	ori	r24, 0x01	; 1
 bd2:	8b bb       	out	0x1b, r24	; 27
 bd4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <lcdCommandEnablePulse>
 bd8:	80 e1       	ldi	r24, 0x10	; 16
 bda:	c8 9f       	mul	r28, r24
 bdc:	b0 01       	movw	r22, r0
 bde:	11 24       	eor	r1, r1
 be0:	61 60       	ori	r22, 0x01	; 1
 be2:	6b bb       	out	0x1b, r22	; 27
 be4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <lcdCommandEnablePulse>
 be8:	0c c0       	rjmp	.+24     	; 0xc02 <lcdCommand+0x3e>
 bea:	86 2f       	mov	r24, r22
 bec:	80 7f       	andi	r24, 0xF0	; 240
 bee:	8b bb       	out	0x1b, r24	; 27
 bf0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <lcdCommandEnablePulse>
 bf4:	90 e1       	ldi	r25, 0x10	; 16
 bf6:	c9 9f       	mul	r28, r25
 bf8:	b0 01       	movw	r22, r0
 bfa:	11 24       	eor	r1, r1
 bfc:	6b bb       	out	0x1b, r22	; 27
 bfe:	0e 94 a5 06 	call	0xd4a	; 0xd4a <lcdCommandEnablePulse>
 c02:	8f e9       	ldi	r24, 0x9F	; 159
 c04:	9f e0       	ldi	r25, 0x0F	; 15
 c06:	01 97       	sbiw	r24, 0x01	; 1
 c08:	f1 f7       	brne	.-4      	; 0xc06 <lcdCommand+0x42>
 c0a:	00 c0       	rjmp	.+0      	; 0xc0c <lcdCommand+0x48>
 c0c:	00 00       	nop
 c0e:	cf 91       	pop	r28
 c10:	08 95       	ret

Disassembly of section .text.lcdGraphicDisplayClearAll:

00000ca6 <lcdGraphicDisplayClearAll>:
 ca6:	cf 93       	push	r28
 ca8:	df 93       	push	r29
 caa:	66 e0       	ldi	r22, 0x06	; 6
 cac:	80 e0       	ldi	r24, 0x00	; 0
 cae:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 cb2:	64 e2       	ldi	r22, 0x24	; 36
 cb4:	80 e0       	ldi	r24, 0x00	; 0
 cb6:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 cba:	d0 e8       	ldi	r29, 0x80	; 128
 cbc:	12 c0       	rjmp	.+36     	; 0xce2 <lcdGraphicDisplayClearAll+0x3c>
 cbe:	6d 2f       	mov	r22, r29
 cc0:	80 e0       	ldi	r24, 0x00	; 0
 cc2:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 cc6:	60 e8       	ldi	r22, 0x80	; 128
 cc8:	80 e0       	ldi	r24, 0x00	; 0
 cca:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 cce:	c0 e0       	ldi	r28, 0x00	; 0
 cd0:	05 c0       	rjmp	.+10     	; 0xcdc <lcdGraphicDisplayClearAll+0x36>
 cd2:	60 e0       	ldi	r22, 0x00	; 0
 cd4:	81 e0       	ldi	r24, 0x01	; 1
 cd6:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 cda:	cf 5f       	subi	r28, 0xFF	; 255
 cdc:	c0 32       	cpi	r28, 0x20	; 32
 cde:	c8 f3       	brcs	.-14     	; 0xcd2 <lcdGraphicDisplayClearAll+0x2c>
 ce0:	df 5f       	subi	r29, 0xFF	; 255
 ce2:	d0 3a       	cpi	r29, 0xA0	; 160
 ce4:	60 f3       	brcs	.-40     	; 0xcbe <lcdGraphicDisplayClearAll+0x18>
 ce6:	df 91       	pop	r29
 ce8:	cf 91       	pop	r28
 cea:	08 95       	ret

Disassembly of section .text.initLCD128X64:

00000b60 <initLCD128X64>:
 b60:	85 b3       	in	r24, 0x15	; 21
 b62:	8f 73       	andi	r24, 0x3F	; 63
 b64:	85 bb       	out	0x15, r24	; 21
 b66:	84 b3       	in	r24, 0x14	; 20
 b68:	80 6c       	ori	r24, 0xC0	; 192
 b6a:	84 bb       	out	0x14, r24	; 20
 b6c:	8a b3       	in	r24, 0x1a	; 26
 b6e:	8f ef       	ldi	r24, 0xFF	; 255
 b70:	8a bb       	out	0x1a, r24	; 26
 b72:	1b ba       	out	0x1b, r1	; 27
 b74:	8f e3       	ldi	r24, 0x3F	; 63
 b76:	9c e9       	ldi	r25, 0x9C	; 156
 b78:	01 97       	sbiw	r24, 0x01	; 1
 b7a:	f1 f7       	brne	.-4      	; 0xb78 <initLCD128X64+0x18>
 b7c:	00 c0       	rjmp	.+0      	; 0xb7e <initLCD128X64+0x1e>
 b7e:	00 00       	nop
 b80:	85 b3       	in	r24, 0x15	; 21
 b82:	80 64       	ori	r24, 0x40	; 64
 b84:	85 bb       	out	0x15, r24	; 21
 b86:	87 e5       	ldi	r24, 0x57	; 87
 b88:	92 e0       	ldi	r25, 0x02	; 2
 b8a:	01 97       	sbiw	r24, 0x01	; 1
 b8c:	f1 f7       	brne	.-4      	; 0xb8a <initLCD128X64+0x2a>
 b8e:	00 c0       	rjmp	.+0      	; 0xb90 <initLCD128X64+0x30>
 b90:	00 00       	nop
 b92:	62 e2       	ldi	r22, 0x22	; 34
 b94:	80 e0       	ldi	r24, 0x00	; 0
 b96:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 b9a:	62 e2       	ldi	r22, 0x22	; 34
 b9c:	80 e0       	ldi	r24, 0x00	; 0
 b9e:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 ba2:	6c e0       	ldi	r22, 0x0C	; 12
 ba4:	80 e0       	ldi	r24, 0x00	; 0
 ba6:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 baa:	61 e0       	ldi	r22, 0x01	; 1
 bac:	80 e0       	ldi	r24, 0x00	; 0
 bae:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 bb2:	8f e3       	ldi	r24, 0x3F	; 63
 bb4:	9c e9       	ldi	r25, 0x9C	; 156
 bb6:	01 97       	sbiw	r24, 0x01	; 1
 bb8:	f1 f7       	brne	.-4      	; 0xbb6 <initLCD128X64+0x56>
 bba:	00 c0       	rjmp	.+0      	; 0xbbc <initLCD128X64+0x5c>
 bbc:	00 00       	nop
 bbe:	0e 94 53 06 	call	0xca6	; 0xca6 <lcdGraphicDisplayClearAll>
 bc2:	08 95       	ret

Disassembly of section .text.lcdCursorSet:

00000c12 <lcdCursorSet>:
 c12:	81 11       	cpse	r24, r1
 c14:	10 c0       	rjmp	.+32     	; 0xc36 <lcdCursorSet+0x24>
 c16:	41 30       	cpi	r20, 0x01	; 1
 c18:	41 f0       	breq	.+16     	; 0xc2a <lcdCursorSet+0x18>
 c1a:	28 f0       	brcs	.+10     	; 0xc26 <lcdCursorSet+0x14>
 c1c:	42 30       	cpi	r20, 0x02	; 2
 c1e:	39 f0       	breq	.+14     	; 0xc2e <lcdCursorSet+0x1c>
 c20:	43 30       	cpi	r20, 0x03	; 3
 c22:	39 f0       	breq	.+14     	; 0xc32 <lcdCursorSet+0x20>
 c24:	17 c0       	rjmp	.+46     	; 0xc54 <lcdCursorSet+0x42>
 c26:	60 58       	subi	r22, 0x80	; 128
 c28:	15 c0       	rjmp	.+42     	; 0xc54 <lcdCursorSet+0x42>
 c2a:	60 57       	subi	r22, 0x70	; 112
 c2c:	13 c0       	rjmp	.+38     	; 0xc54 <lcdCursorSet+0x42>
 c2e:	68 57       	subi	r22, 0x78	; 120
 c30:	11 c0       	rjmp	.+34     	; 0xc54 <lcdCursorSet+0x42>
 c32:	68 56       	subi	r22, 0x68	; 104
 c34:	0f c0       	rjmp	.+30     	; 0xc54 <lcdCursorSet+0x42>
 c36:	41 30       	cpi	r20, 0x01	; 1
 c38:	41 f0       	breq	.+16     	; 0xc4a <lcdCursorSet+0x38>
 c3a:	28 f0       	brcs	.+10     	; 0xc46 <lcdCursorSet+0x34>
 c3c:	42 30       	cpi	r20, 0x02	; 2
 c3e:	39 f0       	breq	.+14     	; 0xc4e <lcdCursorSet+0x3c>
 c40:	43 30       	cpi	r20, 0x03	; 3
 c42:	39 f0       	breq	.+14     	; 0xc52 <lcdCursorSet+0x40>
 c44:	07 c0       	rjmp	.+14     	; 0xc54 <lcdCursorSet+0x42>
 c46:	60 56       	subi	r22, 0x60	; 96
 c48:	05 c0       	rjmp	.+10     	; 0xc54 <lcdCursorSet+0x42>
 c4a:	60 55       	subi	r22, 0x50	; 80
 c4c:	03 c0       	rjmp	.+6      	; 0xc54 <lcdCursorSet+0x42>
 c4e:	68 55       	subi	r22, 0x58	; 88
 c50:	01 c0       	rjmp	.+2      	; 0xc54 <lcdCursorSet+0x42>
 c52:	68 54       	subi	r22, 0x48	; 72
 c54:	80 e0       	ldi	r24, 0x00	; 0
 c56:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 c5a:	08 95       	ret

Disassembly of section .text.lcdPrint:

00000d1c <lcdPrint>:
 d1c:	cf 92       	push	r12
 d1e:	df 92       	push	r13
 d20:	ef 92       	push	r14
 d22:	6b 01       	movw	r12, r22
 d24:	e8 2e       	mov	r14, r24
 d26:	07 c0       	rjmp	.+14     	; 0xd36 <lcdPrint+0x1a>
 d28:	81 e0       	ldi	r24, 0x01	; 1
 d2a:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 d2e:	8f ef       	ldi	r24, 0xFF	; 255
 d30:	c8 1a       	sub	r12, r24
 d32:	d8 0a       	sbc	r13, r24
 d34:	e8 0a       	sbc	r14, r24
 d36:	f6 01       	movw	r30, r12
 d38:	64 91       	lpm	r22, Z
 d3a:	e7 fc       	sbrc	r14, 7
 d3c:	60 81       	ld	r22, Z
 d3e:	61 11       	cpse	r22, r1
 d40:	f3 cf       	rjmp	.-26     	; 0xd28 <lcdPrint+0xc>
 d42:	ef 90       	pop	r14
 d44:	df 90       	pop	r13
 d46:	cf 90       	pop	r12
 d48:	08 95       	ret

Disassembly of section .text.lcdNormalMode:

00000dd8 <lcdNormalMode>:
		text++;
	}
}

void lcdNormalMode() {
	lcdCommand(INSTRUCTION_MODE, INS_LCD12864_FUNCTION_SET);
 dd8:	62 e2       	ldi	r22, 0x22	; 34
 dda:	80 e0       	ldi	r24, 0x00	; 0
 ddc:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 de0:	08 95       	ret

Disassembly of section .text.lcdClear:

00000db8 <lcdClear>:
}

void lcdClear() {
	lcdCommand(INSTRUCTION_MODE, INS_LCD12864_FUNCTION_SET);
 db8:	62 e2       	ldi	r22, 0x22	; 34
 dba:	80 e0       	ldi	r24, 0x00	; 0
 dbc:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
	lcdCommand(INSTRUCTION_MODE, INS_LCD12864_CLEAR);
 dc0:	61 e0       	ldi	r22, 0x01	; 1
 dc2:	80 e0       	ldi	r24, 0x00	; 0
 dc4:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 dc8:	08 95       	ret

Disassembly of section .text.lcdGraphicsMode:

00000de2 <lcdGraphicsMode>:
}

void lcdGraphicsMode() {
	lcdCommand(INSTRUCTION_MODE, INS_LCD12864_FUNCTION_SET_EX); 
 de2:	64 e2       	ldi	r22, 0x24	; 36
 de4:	80 e0       	ldi	r24, 0x00	; 0
 de6:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 dea:	08 95       	ret

Disassembly of section .text.lcdDrawGraphics:

00000dec <lcdDrawGraphics>:
}

void lcdDrawGraphics() {
	lcdCommand(INSTRUCTION_MODE, INS_LCD12864_GRAPHICS_ENABLE);
 dec:	66 e2       	ldi	r22, 0x26	; 38
 dee:	80 e0       	ldi	r24, 0x00	; 0
 df0:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 df4:	08 95       	ret

Disassembly of section .text.lcdPixelCordinate:

00000d8a <lcdPixelCordinate>:
}

void lcdPixelCordinate(uint8_t v, uint8_t h) {
 d8a:	cf 93       	push	r28
 d8c:	c6 2f       	mov	r28, r22
	lcdCommand(INSTRUCTION_MODE, v); // Vertical
 d8e:	68 2f       	mov	r22, r24
 d90:	80 e0       	ldi	r24, 0x00	; 0
 d92:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
	lcdCommand(INSTRUCTION_MODE, h); // Horizontal
 d96:	6c 2f       	mov	r22, r28
 d98:	80 e0       	ldi	r24, 0x00	; 0
 d9a:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
}
 d9e:	cf 91       	pop	r28
 da0:	08 95       	ret

Disassembly of section .text.strLength:

00000d6a <strLength>:


#ifndef STRING_UTIL_H_
#define STRING_UTIL_H_

unsigned int strLength(const char * stringlet) {
 d6a:	9b 01       	movw	r18, r22
 d6c:	48 2f       	mov	r20, r24
	unsigned int lenght = 0;
 d6e:	80 e0       	ldi	r24, 0x00	; 0
 d70:	90 e0       	ldi	r25, 0x00	; 0
	while(*stringlet) {
 d72:	04 c0       	rjmp	.+8      	; 0xd7c <strLength+0x12>
		lenght++;
 d74:	01 96       	adiw	r24, 0x01	; 1
		stringlet++;
 d76:	2f 5f       	subi	r18, 0xFF	; 255
 d78:	3f 4f       	sbci	r19, 0xFF	; 255
 d7a:	4f 4f       	sbci	r20, 0xFF	; 255
#ifndef STRING_UTIL_H_
#define STRING_UTIL_H_

unsigned int strLength(const char * stringlet) {
	unsigned int lenght = 0;
	while(*stringlet) {
 d7c:	f9 01       	movw	r30, r18
 d7e:	54 91       	lpm	r21, Z
 d80:	47 fd       	sbrc	r20, 7
 d82:	50 81       	ld	r21, Z
 d84:	51 11       	cpse	r21, r1
 d86:	f6 cf       	rjmp	.-20     	; 0xd74 <strLength+0xa>
		lenght++;
		stringlet++;
	}
	return lenght;
}
 d88:	08 95       	ret

Disassembly of section .text.getIndexerForProvidedNumericCharacter:

00000dfa <getIndexerForProvidedNumericCharacter>:
	0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,
};

uint8_t getIndexerForProvidedNumericCharacter(char numericCharacter) {
	return (uint8_t) numericCharacter - 48; // 48 is the ascii value of '0'
}
 dfa:	80 53       	subi	r24, 0x30	; 48
 dfc:	08 95       	ret

Disassembly of section .text.getIndexerForProvidedNumericSpecialCharacter:

00000cec <getIndexerForProvidedNumericSpecialCharacter>:
		value = 0x20;
	}
	lcdCommand(INSTRUCTION_MODE, INS_LCD12864_FUNCTION_SET_EX);
	lcdCommand(INSTRUCTION_MODE, INS_LCD12864_VERTICAL_SCROLL);
	lcdCommand(INSTRUCTION_MODE, 0b01000000 | value);
}
 cec:	8d 32       	cpi	r24, 0x2D	; 45
 cee:	81 f0       	breq	.+32     	; 0xd10 <getIndexerForProvidedNumericSpecialCharacter+0x24>
 cf0:	28 f4       	brcc	.+10     	; 0xcfc <getIndexerForProvidedNumericSpecialCharacter+0x10>
 cf2:	85 32       	cpi	r24, 0x25	; 37
 cf4:	59 f0       	breq	.+22     	; 0xd0c <getIndexerForProvidedNumericSpecialCharacter+0x20>
 cf6:	8b 32       	cpi	r24, 0x2B	; 43
 cf8:	69 f0       	breq	.+26     	; 0xd14 <getIndexerForProvidedNumericSpecialCharacter+0x28>
 cfa:	04 c0       	rjmp	.+8      	; 0xd04 <getIndexerForProvidedNumericSpecialCharacter+0x18>
 cfc:	8e 32       	cpi	r24, 0x2E	; 46
 cfe:	61 f0       	breq	.+24     	; 0xd18 <getIndexerForProvidedNumericSpecialCharacter+0x2c>
 d00:	8a 33       	cpi	r24, 0x3A	; 58
 d02:	11 f0       	breq	.+4      	; 0xd08 <getIndexerForProvidedNumericSpecialCharacter+0x1c>
 d04:	80 e0       	ldi	r24, 0x00	; 0
 d06:	08 95       	ret
 d08:	8b e0       	ldi	r24, 0x0B	; 11
 d0a:	08 95       	ret
 d0c:	8c e0       	ldi	r24, 0x0C	; 12
 d0e:	08 95       	ret
 d10:	8d e0       	ldi	r24, 0x0D	; 13
 d12:	08 95       	ret
 d14:	8e e0       	ldi	r24, 0x0E	; 14
 d16:	08 95       	ret
 d18:	8a e0       	ldi	r24, 0x0A	; 10
 d1a:	08 95       	ret

Disassembly of section .text.getIndexerForProvidedCapitalAlphaCharacter:

00000dfe <getIndexerForProvidedCapitalAlphaCharacter>:
	return numericSpecialCharacterIndex;
}

uint8_t getIndexerForProvidedCapitalAlphaCharacter(char capitalAlphaCharacter) {
	return (uint8_t) capitalAlphaCharacter - 65; // 65 is the ascii value of 'A'
}
 dfe:	81 54       	subi	r24, 0x41	; 65
 e00:	08 95       	ret

Disassembly of section .text.getIndexerForProvidedSimpleAlphaCharacter:

00000e02 <getIndexerForProvidedSimpleAlphaCharacter>:

uint8_t getIndexerForProvidedSimpleAlphaCharacter(char simpleAlphaCharacter) {
	return (uint8_t) simpleAlphaCharacter - 97; // 65 is the ascii value of 'a'
}
 e02:	81 56       	subi	r24, 0x61	; 97
 e04:	08 95       	ret

Disassembly of section .text.getIndexerByCharacterType:

00000a60 <getIndexerByCharacterType>:
 a60:	cf 93       	push	r28
 a62:	df 93       	push	r29
 a64:	eb 01       	movw	r28, r22
 a66:	80 33       	cpi	r24, 0x30	; 48
 a68:	68 f4       	brcc	.+26     	; 0xa84 <getIndexerByCharacterType+0x24>
 a6a:	0e 94 76 06 	call	0xcec	; 0xcec <getIndexerForProvidedNumericSpecialCharacter>
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	99 83       	std	Y+1, r25	; 0x01
 a72:	88 83       	st	Y, r24
 a74:	8f e0       	ldi	r24, 0x0F	; 15
 a76:	90 e0       	ldi	r25, 0x00	; 0
 a78:	9b 83       	std	Y+3, r25	; 0x03
 a7a:	8a 83       	std	Y+2, r24	; 0x02
 a7c:	6a e4       	ldi	r22, 0x4A	; 74
 a7e:	72 e0       	ldi	r23, 0x02	; 2
 a80:	80 e0       	ldi	r24, 0x00	; 0
 a82:	36 c0       	rjmp	.+108    	; 0xaf0 <getIndexerByCharacterType+0x90>
 a84:	90 ed       	ldi	r25, 0xD0	; 208
 a86:	98 0f       	add	r25, r24
 a88:	9a 30       	cpi	r25, 0x0A	; 10
 a8a:	68 f4       	brcc	.+26     	; 0xaa6 <getIndexerByCharacterType+0x46>
 a8c:	0e 94 fd 06 	call	0xdfa	; 0xdfa <getIndexerForProvidedNumericCharacter>
 a90:	90 e0       	ldi	r25, 0x00	; 0
 a92:	99 83       	std	Y+1, r25	; 0x01
 a94:	88 83       	st	Y, r24
 a96:	8f e0       	ldi	r24, 0x0F	; 15
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	9b 83       	std	Y+3, r25	; 0x03
 a9c:	8a 83       	std	Y+2, r24	; 0x02
 a9e:	6a e4       	ldi	r22, 0x4A	; 74
 aa0:	72 e0       	ldi	r23, 0x02	; 2
 aa2:	80 e0       	ldi	r24, 0x00	; 0
 aa4:	25 c0       	rjmp	.+74     	; 0xaf0 <getIndexerByCharacterType+0x90>
 aa6:	9f eb       	ldi	r25, 0xBF	; 191
 aa8:	98 0f       	add	r25, r24
 aaa:	9a 31       	cpi	r25, 0x1A	; 26
 aac:	68 f4       	brcc	.+26     	; 0xac8 <getIndexerByCharacterType+0x68>
 aae:	0e 94 ff 06 	call	0xdfe	; 0xdfe <getIndexerForProvidedCapitalAlphaCharacter>
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	99 83       	std	Y+1, r25	; 0x01
 ab6:	88 83       	st	Y, r24
 ab8:	8a e1       	ldi	r24, 0x1A	; 26
 aba:	90 e0       	ldi	r25, 0x00	; 0
 abc:	9b 83       	std	Y+3, r25	; 0x03
 abe:	8a 83       	std	Y+2, r24	; 0x02
 ac0:	64 eb       	ldi	r22, 0xB4	; 180
 ac2:	70 e0       	ldi	r23, 0x00	; 0
 ac4:	80 e0       	ldi	r24, 0x00	; 0
 ac6:	14 c0       	rjmp	.+40     	; 0xaf0 <getIndexerByCharacterType+0x90>
 ac8:	9f e9       	ldi	r25, 0x9F	; 159
 aca:	98 0f       	add	r25, r24
 acc:	9b 31       	cpi	r25, 0x1B	; 27
 ace:	68 f4       	brcc	.+26     	; 0xaea <getIndexerByCharacterType+0x8a>
 ad0:	0e 94 01 07 	call	0xe02	; 0xe02 <getIndexerForProvidedSimpleAlphaCharacter>
 ad4:	90 e0       	ldi	r25, 0x00	; 0
 ad6:	99 83       	std	Y+1, r25	; 0x01
 ad8:	88 83       	st	Y, r24
 ada:	8a e1       	ldi	r24, 0x1A	; 26
 adc:	90 e0       	ldi	r25, 0x00	; 0
 ade:	9b 83       	std	Y+3, r25	; 0x03
 ae0:	8a 83       	std	Y+2, r24	; 0x02
 ae2:	64 eb       	ldi	r22, 0xB4	; 180
 ae4:	70 e0       	ldi	r23, 0x00	; 0
 ae6:	80 e0       	ldi	r24, 0x00	; 0
 ae8:	03 c0       	rjmp	.+6      	; 0xaf0 <getIndexerByCharacterType+0x90>
 aea:	60 e0       	ldi	r22, 0x00	; 0
 aec:	70 e0       	ldi	r23, 0x00	; 0
 aee:	80 e0       	ldi	r24, 0x00	; 0
 af0:	df 91       	pop	r29
 af2:	cf 91       	pop	r28
 af4:	08 95       	ret

Disassembly of section .text.numberGenerator5x8:

00000320 <numberGenerator5x8>:
 320:	2f 92       	push	r2
 322:	3f 92       	push	r3
 324:	4f 92       	push	r4
 326:	5f 92       	push	r5
 328:	6f 92       	push	r6
 32a:	7f 92       	push	r7
 32c:	8f 92       	push	r8
 32e:	9f 92       	push	r9
 330:	af 92       	push	r10
 332:	bf 92       	push	r11
 334:	cf 92       	push	r12
 336:	df 92       	push	r13
 338:	ef 92       	push	r14
 33a:	ff 92       	push	r15
 33c:	0f 93       	push	r16
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	cd b7       	in	r28, 0x3d	; 61
 346:	de b7       	in	r29, 0x3e	; 62
 348:	68 97       	sbiw	r28, 0x18	; 24
 34a:	0f b6       	in	r0, 0x3f	; 63
 34c:	f8 94       	cli
 34e:	de bf       	out	0x3e, r29	; 62
 350:	0f be       	out	0x3f, r0	; 63
 352:	cd bf       	out	0x3d, r28	; 61
 354:	6b 8b       	std	Y+19, r22	; 0x13
 356:	7c 8b       	std	Y+20, r23	; 0x14
 358:	8d 8b       	std	Y+21, r24	; 0x15
 35a:	8a 01       	movw	r16, r20
 35c:	d2 2e       	mov	r13, r18
 35e:	e2 2e       	mov	r14, r18
 360:	f1 2c       	mov	r15, r1
 362:	0e 94 b5 06 	call	0xd6a	; 0xd6a <strLength>
 366:	9c 01       	movw	r18, r24
 368:	22 0f       	add	r18, r18
 36a:	33 1f       	adc	r19, r19
 36c:	82 0f       	add	r24, r18
 36e:	93 1f       	adc	r25, r19
 370:	88 0f       	add	r24, r24
 372:	99 1f       	adc	r25, r25
 374:	e8 16       	cp	r14, r24
 376:	f9 06       	cpc	r15, r25
 378:	08 f4       	brcc	.+2      	; 0x37c <numberGenerator5x8+0x5c>
 37a:	e5 c0       	rjmp	.+458    	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
 37c:	88 e0       	ldi	r24, 0x08	; 8
 37e:	e0 e6       	ldi	r30, 0x60	; 96
 380:	f0 e0       	ldi	r31, 0x00	; 0
 382:	de 01       	movw	r26, r28
 384:	11 96       	adiw	r26, 0x01	; 1
 386:	01 90       	ld	r0, Z+
 388:	0d 92       	st	X+, r0
 38a:	8a 95       	dec	r24
 38c:	e1 f7       	brne	.-8      	; 0x386 <numberGenerator5x8+0x66>
 38e:	d6 94       	lsr	r13
 390:	d6 94       	lsr	r13
 392:	d6 94       	lsr	r13
 394:	4d 2c       	mov	r4, r13
 396:	51 2c       	mov	r5, r1
 398:	1a 86       	std	Y+10, r1	; 0x0a
 39a:	19 86       	std	Y+9, r1	; 0x09
 39c:	1c 86       	std	Y+12, r1	; 0x0c
 39e:	1b 86       	std	Y+11, r1	; 0x0b
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	9e 87       	std	Y+14, r25	; 0x0e
 3a6:	8d 87       	std	Y+13, r24	; 0x0d
 3a8:	18 8a       	std	Y+16, r1	; 0x10
 3aa:	1f 86       	std	Y+15, r1	; 0x0f
 3ac:	1a 8a       	std	Y+18, r1	; 0x12
 3ae:	19 8a       	std	Y+17, r1	; 0x11
 3b0:	21 2c       	mov	r2, r1
 3b2:	31 2c       	mov	r3, r1
 3b4:	be c0       	rjmp	.+380    	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 3b6:	be 01       	movw	r22, r28
 3b8:	61 5f       	subi	r22, 0xF1	; 241
 3ba:	7f 4f       	sbci	r23, 0xFF	; 255
 3bc:	0e 94 30 05 	call	0xa60	; 0xa60 <getIndexerByCharacterType>
 3c0:	3b 01       	movw	r6, r22
 3c2:	88 2e       	mov	r8, r24
 3c4:	c9 84       	ldd	r12, Y+9	; 0x09
 3c6:	da 84       	ldd	r13, Y+10	; 0x0a
 3c8:	d8 8e       	std	Y+24, r13	; 0x18
 3ca:	cf 8a       	std	Y+23, r12	; 0x17
 3cc:	db 84       	ldd	r13, Y+11	; 0x0b
 3ce:	de 8a       	std	Y+22, r13	; 0x16
 3d0:	9c 84       	ldd	r9, Y+12	; 0x0c
 3d2:	4d 2d       	mov	r20, r13
 3d4:	59 2d       	mov	r21, r9
 3d6:	60 e0       	ldi	r22, 0x00	; 0
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	77 c0       	rjmp	.+238    	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 3dc:	af 85       	ldd	r26, Y+15	; 0x0f
 3de:	b8 89       	ldd	r27, Y+16	; 0x10
 3e0:	20 e0       	ldi	r18, 0x00	; 0
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	5e c0       	rjmp	.+188    	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 3e6:	61 15       	cp	r22, r1
 3e8:	71 05       	cpc	r23, r1
 3ea:	59 f5       	brne	.+86     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 3ec:	ef 88       	ldd	r14, Y+23	; 0x17
 3ee:	f8 8c       	ldd	r15, Y+24	; 0x18
 3f0:	e0 0e       	add	r14, r16
 3f2:	f1 1e       	adc	r15, r17
 3f4:	c8 2c       	mov	r12, r8
 3f6:	53 01       	movw	r10, r6
 3f8:	aa 0e       	add	r10, r26
 3fa:	bb 1e       	adc	r11, r27
 3fc:	c1 1c       	adc	r12, r1
 3fe:	b7 fd       	sbrc	r27, 7
 400:	ca 94       	dec	r12
 402:	f5 01       	movw	r30, r10
 404:	84 91       	lpm	r24, Z
 406:	c7 fc       	sbrc	r12, 7
 408:	80 81       	ld	r24, Z
 40a:	f1 01       	movw	r30, r2
 40c:	ee 0f       	add	r30, r30
 40e:	ff 1f       	adc	r31, r31
 410:	cc 24       	eor	r12, r12
 412:	c3 94       	inc	r12
 414:	d1 2c       	mov	r13, r1
 416:	cc 0e       	add	r12, r28
 418:	dd 1e       	adc	r13, r29
 41a:	ec 0d       	add	r30, r12
 41c:	fd 1d       	adc	r31, r13
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	00 80       	ld	r0, Z
 422:	02 c0       	rjmp	.+4      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 424:	95 95       	asr	r25
 426:	87 95       	ror	r24
 428:	0a 94       	dec	r0
 42a:	e2 f7       	brpl	.-8      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 42c:	f7 01       	movw	r30, r14
 42e:	90 81       	ld	r25, Z
 430:	89 2b       	or	r24, r25
 432:	80 83       	st	Z, r24
 434:	cf 88       	ldd	r12, Y+23	; 0x17
 436:	d8 8c       	ldd	r13, Y+24	; 0x18
 438:	c4 0c       	add	r12, r4
 43a:	d5 1c       	adc	r13, r5
 43c:	d8 8e       	std	Y+24, r13	; 0x18
 43e:	cf 8a       	std	Y+23, r12	; 0x17
 440:	2a c0       	rjmp	.+84     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 442:	78 01       	movw	r14, r16
 444:	e4 0e       	add	r14, r20
 446:	f5 1e       	adc	r15, r21
 448:	c8 2c       	mov	r12, r8
 44a:	53 01       	movw	r10, r6
 44c:	aa 0e       	add	r10, r26
 44e:	bb 1e       	adc	r11, r27
 450:	c1 1c       	adc	r12, r1
 452:	b7 fd       	sbrc	r27, 7
 454:	ca 94       	dec	r12
 456:	f5 01       	movw	r30, r10
 458:	84 91       	lpm	r24, Z
 45a:	c7 fc       	sbrc	r12, 7
 45c:	80 81       	ld	r24, Z
 45e:	f1 01       	movw	r30, r2
 460:	ee 0f       	add	r30, r30
 462:	ff 1f       	adc	r31, r31
 464:	cc 24       	eor	r12, r12
 466:	c3 94       	inc	r12
 468:	d1 2c       	mov	r13, r1
 46a:	cc 0e       	add	r12, r28
 46c:	dd 1e       	adc	r13, r29
 46e:	ec 0d       	add	r30, r12
 470:	fd 1d       	adc	r31, r13
 472:	c0 80       	ld	r12, Z
 474:	d1 80       	ldd	r13, Z+1	; 0x01
 476:	e8 e0       	ldi	r30, 0x08	; 8
 478:	f0 e0       	ldi	r31, 0x00	; 0
 47a:	ec 19       	sub	r30, r12
 47c:	fd 09       	sbc	r31, r13
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	02 c0       	rjmp	.+4      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 482:	88 0f       	add	r24, r24
 484:	99 1f       	adc	r25, r25
 486:	ea 95       	dec	r30
 488:	e2 f7       	brpl	.-8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 48a:	f7 01       	movw	r30, r14
 48c:	90 81       	ld	r25, Z
 48e:	89 2b       	or	r24, r25
 490:	80 83       	st	Z, r24
 492:	44 0d       	add	r20, r4
 494:	55 1d       	adc	r21, r5
 496:	89 89       	ldd	r24, Y+17	; 0x11
 498:	9a 89       	ldd	r25, Y+18	; 0x12
 49a:	a8 0f       	add	r26, r24
 49c:	b9 1f       	adc	r27, r25
 49e:	2f 5f       	subi	r18, 0xFF	; 255
 4a0:	3f 4f       	sbci	r19, 0xFF	; 255
 4a2:	28 30       	cpi	r18, 0x08	; 8
 4a4:	31 05       	cpc	r19, r1
 4a6:	0c f4       	brge	.+2      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4a8:	9e cf       	rjmp	.-196    	; 0x3e6 <numberGenerator5x8+0xc6>
 4aa:	f1 01       	movw	r30, r2
 4ac:	ee 0f       	add	r30, r30
 4ae:	ff 1f       	adc	r31, r31
 4b0:	cc 24       	eor	r12, r12
 4b2:	c3 94       	inc	r12
 4b4:	d1 2c       	mov	r13, r1
 4b6:	cc 0e       	add	r12, r28
 4b8:	dd 1e       	adc	r13, r29
 4ba:	ec 0d       	add	r30, r12
 4bc:	fd 1d       	adc	r31, r13
 4be:	80 81       	ld	r24, Z
 4c0:	91 81       	ldd	r25, Z+1	; 0x01
 4c2:	89 2b       	or	r24, r25
 4c4:	31 f0       	breq	.+12     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4c6:	6f 5f       	subi	r22, 0xFF	; 255
 4c8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ca:	62 30       	cpi	r22, 0x02	; 2
 4cc:	71 05       	cpc	r23, r1
 4ce:	0c f4       	brge	.+2      	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4d0:	85 cf       	rjmp	.-246    	; 0x3dc <numberGenerator5x8+0xbc>
 4d2:	8b 89       	ldd	r24, Y+19	; 0x13
 4d4:	9c 89       	ldd	r25, Y+20	; 0x14
 4d6:	ad 89       	ldd	r26, Y+21	; 0x15
 4d8:	01 96       	adiw	r24, 0x01	; 1
 4da:	a1 1d       	adc	r26, r1
 4dc:	8b 8b       	std	Y+19, r24	; 0x13
 4de:	9c 8b       	std	Y+20, r25	; 0x14
 4e0:	ad 8b       	std	Y+21, r26	; 0x15
 4e2:	9f ef       	ldi	r25, 0xFF	; 255
 4e4:	29 1a       	sub	r2, r25
 4e6:	39 0a       	sbc	r3, r25
 4e8:	a4 e0       	ldi	r26, 0x04	; 4
 4ea:	2a 16       	cp	r2, r26
 4ec:	31 04       	cpc	r3, r1
 4ee:	61 f4       	brne	.+24     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 4f0:	8d 85       	ldd	r24, Y+13	; 0x0d
 4f2:	9e 85       	ldd	r25, Y+14	; 0x0e
 4f4:	9a 87       	std	Y+10, r25	; 0x0a
 4f6:	89 87       	std	Y+9, r24	; 0x09
 4f8:	9c 87       	std	Y+12, r25	; 0x0c
 4fa:	8b 87       	std	Y+11, r24	; 0x0b
 4fc:	01 96       	adiw	r24, 0x01	; 1
 4fe:	9e 87       	std	Y+14, r25	; 0x0e
 500:	8d 87       	std	Y+13, r24	; 0x0d
 502:	21 2c       	mov	r2, r1
 504:	31 2c       	mov	r3, r1
 506:	0a c0       	rjmp	.+20     	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 508:	ce 88       	ldd	r12, Y+22	; 0x16
 50a:	c9 86       	std	Y+9, r12	; 0x09
 50c:	9a 86       	std	Y+10, r9	; 0x0a
 50e:	8d 85       	ldd	r24, Y+13	; 0x0d
 510:	9e 85       	ldd	r25, Y+14	; 0x0e
 512:	9c 87       	std	Y+12, r25	; 0x0c
 514:	8b 87       	std	Y+11, r24	; 0x0b
 516:	01 96       	adiw	r24, 0x01	; 1
 518:	9e 87       	std	Y+14, r25	; 0x0e
 51a:	8d 87       	std	Y+13, r24	; 0x0d
 51c:	83 e0       	ldi	r24, 0x03	; 3
 51e:	28 16       	cp	r2, r24
 520:	31 04       	cpc	r3, r1
 522:	39 f4       	brne	.+14     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 524:	89 85       	ldd	r24, Y+9	; 0x09
 526:	9a 85       	ldd	r25, Y+10	; 0x0a
 528:	9c 87       	std	Y+12, r25	; 0x0c
 52a:	8b 87       	std	Y+11, r24	; 0x0b
 52c:	01 96       	adiw	r24, 0x01	; 1
 52e:	9e 87       	std	Y+14, r25	; 0x0e
 530:	8d 87       	std	Y+13, r24	; 0x0d
 532:	eb 89       	ldd	r30, Y+19	; 0x13
 534:	fc 89       	ldd	r31, Y+20	; 0x14
 536:	9d 89       	ldd	r25, Y+21	; 0x15
 538:	84 91       	lpm	r24, Z
 53a:	97 fd       	sbrc	r25, 7
 53c:	80 81       	ld	r24, Z
 53e:	81 11       	cpse	r24, r1
 540:	3a cf       	rjmp	.-396    	; 0x3b6 <numberGenerator5x8+0x96>
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	01 c0       	rjmp	.+2      	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 546:	80 e0       	ldi	r24, 0x00	; 0
 548:	68 96       	adiw	r28, 0x18	; 24
 54a:	0f b6       	in	r0, 0x3f	; 63
 54c:	f8 94       	cli
 54e:	de bf       	out	0x3e, r29	; 62
 550:	0f be       	out	0x3f, r0	; 63
 552:	cd bf       	out	0x3d, r28	; 61
 554:	df 91       	pop	r29
 556:	cf 91       	pop	r28
 558:	1f 91       	pop	r17
 55a:	0f 91       	pop	r16
 55c:	ff 90       	pop	r15
 55e:	ef 90       	pop	r14
 560:	df 90       	pop	r13
 562:	cf 90       	pop	r12
 564:	bf 90       	pop	r11
 566:	af 90       	pop	r10
 568:	9f 90       	pop	r9
 56a:	8f 90       	pop	r8
 56c:	7f 90       	pop	r7
 56e:	6f 90       	pop	r6
 570:	5f 90       	pop	r5
 572:	4f 90       	pop	r4
 574:	3f 90       	pop	r3
 576:	2f 90       	pop	r2
 578:	08 95       	ret

Disassembly of section .text.renderGraphics:

0000057a <renderGraphics>:
 57a:	6f 92       	push	r6
 57c:	7f 92       	push	r7
 57e:	8f 92       	push	r8
 580:	9f 92       	push	r9
 582:	af 92       	push	r10
 584:	bf 92       	push	r11
 586:	cf 92       	push	r12
 588:	df 92       	push	r13
 58a:	ef 92       	push	r14
 58c:	ff 92       	push	r15
 58e:	0f 93       	push	r16
 590:	1f 93       	push	r17
 592:	cf 93       	push	r28
 594:	df 93       	push	r29
 596:	3b 01       	movw	r6, r22
 598:	88 2e       	mov	r8, r24
 59a:	b4 2e       	mov	r11, r20
 59c:	82 2f       	mov	r24, r18
 59e:	87 70       	andi	r24, 0x07	; 7
 5a0:	11 f0       	breq	.+4      	; 0x5a6 <renderGraphics+0x2c>
 5a2:	28 7f       	andi	r18, 0xF8	; 248
 5a4:	28 5f       	subi	r18, 0xF8	; 248
 5a6:	f2 2e       	mov	r15, r18
 5a8:	f6 94       	lsr	r15
 5aa:	f6 94       	lsr	r15
 5ac:	f6 94       	lsr	r15
 5ae:	ce 2c       	mov	r12, r14
 5b0:	d1 2c       	mov	r13, r1
 5b2:	c6 01       	movw	r24, r12
 5b4:	8b 0d       	add	r24, r11
 5b6:	91 1d       	adc	r25, r1
 5b8:	80 97       	sbiw	r24, 0x20	; 32
 5ba:	ac f0       	brlt	.+42     	; 0x5e6 <renderGraphics+0x6c>
 5bc:	8f e1       	ldi	r24, 0x1F	; 31
 5be:	8e 15       	cp	r24, r14
 5c0:	40 f4       	brcc	.+16     	; 0x5d2 <renderGraphics+0x58>
 5c2:	0f 2e       	mov	r0, r31
 5c4:	f0 ee       	ldi	r31, 0xE0	; 224
 5c6:	9f 2e       	mov	r9, r31
 5c8:	f0 2d       	mov	r31, r0
 5ca:	9e 0c       	add	r9, r14
 5cc:	ab 2c       	mov	r10, r11
 5ce:	b1 2c       	mov	r11, r1
 5d0:	0c c0       	rjmp	.+24     	; 0x5ea <renderGraphics+0x70>
 5d2:	8e 2d       	mov	r24, r14
 5d4:	8b 0d       	add	r24, r11
 5d6:	0f 2e       	mov	r0, r31
 5d8:	f0 ee       	ldi	r31, 0xE0	; 224
 5da:	af 2e       	mov	r10, r31
 5dc:	f0 2d       	mov	r31, r0
 5de:	a8 0e       	add	r10, r24
 5e0:	ba 18       	sub	r11, r10
 5e2:	91 2c       	mov	r9, r1
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <renderGraphics+0x70>
 5e6:	91 2c       	mov	r9, r1
 5e8:	a1 2c       	mov	r10, r1
 5ea:	80 e8       	ldi	r24, 0x80	; 128
 5ec:	e8 0e       	add	r14, r24
 5ee:	c0 e0       	ldi	r28, 0x00	; 0
 5f0:	d0 e0       	ldi	r29, 0x00	; 0
 5f2:	23 c0       	rjmp	.+70     	; 0x63a <renderGraphics+0xc0>
 5f4:	10 e8       	ldi	r17, 0x80	; 128
 5f6:	10 0f       	add	r17, r16
 5f8:	61 2f       	mov	r22, r17
 5fa:	8e 2d       	mov	r24, r14
 5fc:	0e 94 c5 06 	call	0xd8a	; 0xd8a <lcdPixelCordinate>
 600:	10 c0       	rjmp	.+32     	; 0x622 <renderGraphics+0xa8>
 602:	a8 2d       	mov	r26, r8
 604:	c3 01       	movw	r24, r6
 606:	8c 0f       	add	r24, r28
 608:	9d 1f       	adc	r25, r29
 60a:	a1 1d       	adc	r26, r1
 60c:	d7 fd       	sbrc	r29, 7
 60e:	aa 95       	dec	r26
 610:	fc 01       	movw	r30, r24
 612:	64 91       	lpm	r22, Z
 614:	a7 fd       	sbrc	r26, 7
 616:	60 81       	ld	r22, Z
 618:	81 e0       	ldi	r24, 0x01	; 1
 61a:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 61e:	21 96       	adiw	r28, 0x01	; 1
 620:	1f 5f       	subi	r17, 0xFF	; 255
 622:	21 2f       	mov	r18, r17
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	8f 2d       	mov	r24, r15
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	80 58       	subi	r24, 0x80	; 128
 62c:	9f 4f       	sbci	r25, 0xFF	; 255
 62e:	80 0f       	add	r24, r16
 630:	91 1d       	adc	r25, r1
 632:	28 17       	cp	r18, r24
 634:	39 07       	cpc	r19, r25
 636:	2c f3       	brlt	.-54     	; 0x602 <renderGraphics+0x88>
 638:	e3 94       	inc	r14
 63a:	2e 2d       	mov	r18, r14
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	c6 01       	movw	r24, r12
 640:	80 58       	subi	r24, 0x80	; 128
 642:	9f 4f       	sbci	r25, 0xFF	; 255
 644:	8b 0d       	add	r24, r11
 646:	91 1d       	adc	r25, r1
 648:	28 17       	cp	r18, r24
 64a:	39 07       	cpc	r19, r25
 64c:	9c f2       	brlt	.-90     	; 0x5f4 <renderGraphics+0x7a>
 64e:	aa 20       	and	r10, r10
 650:	99 f1       	breq	.+102    	; 0x6b8 <renderGraphics+0x13e>
 652:	68 94       	set
 654:	ee 24       	eor	r14, r14
 656:	e7 f8       	bld	r14, 7
 658:	e9 0c       	add	r14, r9
 65a:	23 c0       	rjmp	.+70     	; 0x6a2 <renderGraphics+0x128>
 65c:	18 e8       	ldi	r17, 0x88	; 136
 65e:	10 0f       	add	r17, r16
 660:	61 2f       	mov	r22, r17
 662:	8e 2d       	mov	r24, r14
 664:	0e 94 c5 06 	call	0xd8a	; 0xd8a <lcdPixelCordinate>
 668:	10 c0       	rjmp	.+32     	; 0x68a <renderGraphics+0x110>
 66a:	a8 2d       	mov	r26, r8
 66c:	c3 01       	movw	r24, r6
 66e:	8c 0f       	add	r24, r28
 670:	9d 1f       	adc	r25, r29
 672:	a1 1d       	adc	r26, r1
 674:	d7 fd       	sbrc	r29, 7
 676:	aa 95       	dec	r26
 678:	fc 01       	movw	r30, r24
 67a:	64 91       	lpm	r22, Z
 67c:	a7 fd       	sbrc	r26, 7
 67e:	60 81       	ld	r22, Z
 680:	81 e0       	ldi	r24, 0x01	; 1
 682:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 686:	21 96       	adiw	r28, 0x01	; 1
 688:	1f 5f       	subi	r17, 0xFF	; 255
 68a:	21 2f       	mov	r18, r17
 68c:	30 e0       	ldi	r19, 0x00	; 0
 68e:	8f 2d       	mov	r24, r15
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	88 57       	subi	r24, 0x78	; 120
 694:	9f 4f       	sbci	r25, 0xFF	; 255
 696:	80 0f       	add	r24, r16
 698:	91 1d       	adc	r25, r1
 69a:	28 17       	cp	r18, r24
 69c:	39 07       	cpc	r19, r25
 69e:	2c f3       	brlt	.-54     	; 0x66a <renderGraphics+0xf0>
 6a0:	e3 94       	inc	r14
 6a2:	2e 2d       	mov	r18, r14
 6a4:	30 e0       	ldi	r19, 0x00	; 0
 6a6:	89 2d       	mov	r24, r9
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	80 58       	subi	r24, 0x80	; 128
 6ac:	9f 4f       	sbci	r25, 0xFF	; 255
 6ae:	8a 0d       	add	r24, r10
 6b0:	91 1d       	adc	r25, r1
 6b2:	28 17       	cp	r18, r24
 6b4:	39 07       	cpc	r19, r25
 6b6:	94 f2       	brlt	.-92     	; 0x65c <renderGraphics+0xe2>
 6b8:	df 91       	pop	r29
 6ba:	cf 91       	pop	r28
 6bc:	1f 91       	pop	r17
 6be:	0f 91       	pop	r16
 6c0:	ff 90       	pop	r15
 6c2:	ef 90       	pop	r14
 6c4:	df 90       	pop	r13
 6c6:	cf 90       	pop	r12
 6c8:	bf 90       	pop	r11
 6ca:	af 90       	pop	r10
 6cc:	9f 90       	pop	r9
 6ce:	8f 90       	pop	r8
 6d0:	7f 90       	pop	r7
 6d2:	6f 90       	pop	r6
 6d4:	08 95       	ret

Disassembly of section .text.allFrame:

00000914 <allFrame>:
 914:	cf 93       	push	r28
 916:	df 93       	push	r29
 918:	60 e8       	ldi	r22, 0x80	; 128
 91a:	80 e8       	ldi	r24, 0x80	; 128
 91c:	0e 94 c5 06 	call	0xd8a	; 0xd8a <lcdPixelCordinate>
 920:	c0 e0       	ldi	r28, 0x00	; 0
 922:	05 c0       	rjmp	.+10     	; 0x92e <allFrame+0x1a>
 924:	6f ef       	ldi	r22, 0xFF	; 255
 926:	81 e0       	ldi	r24, 0x01	; 1
 928:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 92c:	cf 5f       	subi	r28, 0xFF	; 255
 92e:	c0 31       	cpi	r28, 0x10	; 16
 930:	c8 f3       	brcs	.-14     	; 0x924 <allFrame+0x10>
 932:	68 e9       	ldi	r22, 0x98	; 152
 934:	8f e9       	ldi	r24, 0x9F	; 159
 936:	0e 94 c5 06 	call	0xd8a	; 0xd8a <lcdPixelCordinate>
 93a:	c0 e0       	ldi	r28, 0x00	; 0
 93c:	05 c0       	rjmp	.+10     	; 0x948 <allFrame+0x34>
 93e:	6f ef       	ldi	r22, 0xFF	; 255
 940:	81 e0       	ldi	r24, 0x01	; 1
 942:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 946:	cf 5f       	subi	r28, 0xFF	; 255
 948:	c0 31       	cpi	r28, 0x10	; 16
 94a:	c8 f3       	brcs	.-14     	; 0x93e <allFrame+0x2a>
 94c:	c0 e0       	ldi	r28, 0x00	; 0
 94e:	17 c0       	rjmp	.+46     	; 0x97e <allFrame+0x6a>
 950:	d1 e8       	ldi	r29, 0x81	; 129
 952:	dc 0f       	add	r29, r28
 954:	60 e8       	ldi	r22, 0x80	; 128
 956:	8d 2f       	mov	r24, r29
 958:	0e 94 c5 06 	call	0xd8a	; 0xd8a <lcdPixelCordinate>
 95c:	60 e8       	ldi	r22, 0x80	; 128
 95e:	81 e0       	ldi	r24, 0x01	; 1
 960:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 964:	67 e8       	ldi	r22, 0x87	; 135
 966:	8d 2f       	mov	r24, r29
 968:	0e 94 c5 06 	call	0xd8a	; 0xd8a <lcdPixelCordinate>
 96c:	60 e0       	ldi	r22, 0x00	; 0
 96e:	81 e0       	ldi	r24, 0x01	; 1
 970:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 974:	61 e0       	ldi	r22, 0x01	; 1
 976:	81 e0       	ldi	r24, 0x01	; 1
 978:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 97c:	cf 5f       	subi	r28, 0xFF	; 255
 97e:	c1 32       	cpi	r28, 0x21	; 33
 980:	38 f3       	brcs	.-50     	; 0x950 <allFrame+0x3c>
 982:	c0 e0       	ldi	r28, 0x00	; 0
 984:	17 c0       	rjmp	.+46     	; 0x9b4 <allFrame+0xa0>
 986:	d0 e8       	ldi	r29, 0x80	; 128
 988:	dc 0f       	add	r29, r28
 98a:	68 e8       	ldi	r22, 0x88	; 136
 98c:	8d 2f       	mov	r24, r29
 98e:	0e 94 c5 06 	call	0xd8a	; 0xd8a <lcdPixelCordinate>
 992:	60 e8       	ldi	r22, 0x80	; 128
 994:	81 e0       	ldi	r24, 0x01	; 1
 996:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 99a:	6f e8       	ldi	r22, 0x8F	; 143
 99c:	8d 2f       	mov	r24, r29
 99e:	0e 94 c5 06 	call	0xd8a	; 0xd8a <lcdPixelCordinate>
 9a2:	60 e0       	ldi	r22, 0x00	; 0
 9a4:	81 e0       	ldi	r24, 0x01	; 1
 9a6:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 9aa:	61 e0       	ldi	r22, 0x01	; 1
 9ac:	81 e0       	ldi	r24, 0x01	; 1
 9ae:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <lcdCommand>
 9b2:	cf 5f       	subi	r28, 0xFF	; 255
 9b4:	cf 31       	cpi	r28, 0x1F	; 31
 9b6:	38 f3       	brcs	.-50     	; 0x986 <allFrame+0x72>
 9b8:	df 91       	pop	r29
 9ba:	cf 91       	pop	r28
 9bc:	08 95       	ret

Disassembly of section .text.__vector_10:

00000c5c <__vector_10>:
 c5c:	1f 92       	push	r1
 c5e:	0f 92       	push	r0
 c60:	0f b6       	in	r0, 0x3f	; 63
 c62:	0f 92       	push	r0
 c64:	11 24       	eor	r1, r1
 c66:	8f 93       	push	r24
 c68:	9f 93       	push	r25
 c6a:	af 93       	push	r26
 c6c:	bf 93       	push	r27
 c6e:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <ticks>
 c72:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <ticks+0x1>
 c76:	a0 91 6e 00 	lds	r26, 0x006E	; 0x80006e <ticks+0x2>
 c7a:	b0 91 6f 00 	lds	r27, 0x006F	; 0x80006f <ticks+0x3>
 c7e:	01 96       	adiw	r24, 0x01	; 1
 c80:	a1 1d       	adc	r26, r1
 c82:	b1 1d       	adc	r27, r1
 c84:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <ticks>
 c88:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <ticks+0x1>
 c8c:	a0 93 6e 00 	sts	0x006E, r26	; 0x80006e <ticks+0x2>
 c90:	b0 93 6f 00 	sts	0x006F, r27	; 0x80006f <ticks+0x3>
 c94:	bf 91       	pop	r27
 c96:	af 91       	pop	r26
 c98:	9f 91       	pop	r25
 c9a:	8f 91       	pop	r24
 c9c:	0f 90       	pop	r0
 c9e:	0f be       	out	0x3f, r0	; 63
 ca0:	0f 90       	pop	r0
 ca2:	1f 90       	pop	r1
 ca4:	18 95       	reti

Disassembly of section .text.__vector_6:

000007a0 <__vector_6>:
 7a0:	1f 92       	push	r1
 7a2:	0f 92       	push	r0
 7a4:	0f b6       	in	r0, 0x3f	; 63
 7a6:	0f 92       	push	r0
 7a8:	11 24       	eor	r1, r1
 7aa:	8f 93       	push	r24
 7ac:	9f 93       	push	r25
 7ae:	af 93       	push	r26
 7b0:	bf 93       	push	r27
 7b2:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <counter>
 7b6:	88 23       	and	r24, r24
 7b8:	d1 f1       	breq	.+116    	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 7ba:	86 b5       	in	r24, 0x26	; 38
 7bc:	97 b5       	in	r25, 0x27	; 39
 7be:	89 37       	cpi	r24, 0x79	; 121
 7c0:	91 05       	cpc	r25, r1
 7c2:	88 f0       	brcs	.+34     	; 0x7e6 <__vector_6+0x46>
 7c4:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <irReceiveData>
 7c8:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <irReceiveData+0x1>
 7cc:	a0 91 6a 00 	lds	r26, 0x006A	; 0x80006a <irReceiveData+0x2>
 7d0:	b0 91 6b 00 	lds	r27, 0x006B	; 0x80006b <irReceiveData+0x3>
 7d4:	81 60       	ori	r24, 0x01	; 1
 7d6:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <irReceiveData>
 7da:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <irReceiveData+0x1>
 7de:	a0 93 6a 00 	sts	0x006A, r26	; 0x80006a <irReceiveData+0x2>
 7e2:	b0 93 6b 00 	sts	0x006B, r27	; 0x80006b <irReceiveData+0x3>
 7e6:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <irReceiveData>
 7ea:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <irReceiveData+0x1>
 7ee:	a0 91 6a 00 	lds	r26, 0x006A	; 0x80006a <irReceiveData+0x2>
 7f2:	b0 91 6b 00 	lds	r27, 0x006B	; 0x80006b <irReceiveData+0x3>
 7f6:	88 0f       	add	r24, r24
 7f8:	99 1f       	adc	r25, r25
 7fa:	aa 1f       	adc	r26, r26
 7fc:	bb 1f       	adc	r27, r27
 7fe:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <irReceiveData>
 802:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <irReceiveData+0x1>
 806:	a0 93 6a 00 	sts	0x006A, r26	; 0x80006a <irReceiveData+0x2>
 80a:	b0 93 6b 00 	sts	0x006B, r27	; 0x80006b <irReceiveData+0x3>
 80e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <counter>
 812:	8d 31       	cpi	r24, 0x1D	; 29
 814:	31 f4       	brne	.+12     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 816:	81 e0       	ldi	r24, 0x01	; 1
 818:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <isIRAvailable>
 81c:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <counter>
 820:	13 c0       	rjmp	.+38     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 822:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <counter>
 826:	8f 5f       	subi	r24, 0xFF	; 255
 828:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <counter>
 82c:	0d c0       	rjmp	.+26     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 82e:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <irReceiveData>
 832:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <irReceiveData+0x1>
 836:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <irReceiveData+0x2>
 83a:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <irReceiveData+0x3>
 83e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <counter>
 842:	8f 5f       	subi	r24, 0xFF	; 255
 844:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <counter>
 848:	1d bc       	out	0x2d, r1	; 45
 84a:	1c bc       	out	0x2c, r1	; 44
 84c:	bf 91       	pop	r27
 84e:	af 91       	pop	r26
 850:	9f 91       	pop	r25
 852:	8f 91       	pop	r24
 854:	0f 90       	pop	r0
 856:	0f be       	out	0x3f, r0	; 63
 858:	0f 90       	pop	r0
 85a:	1f 90       	pop	r1
 85c:	18 95       	reti

Disassembly of section .text.notificationIconFormatter:

0000085e <notificationIconFormatter>:
 85e:	6f 92       	push	r6
 860:	7f 92       	push	r7
 862:	8f 92       	push	r8
 864:	cf 92       	push	r12
 866:	df 92       	push	r13
 868:	ef 92       	push	r14
 86a:	0f 93       	push	r16
 86c:	cf 93       	push	r28
 86e:	df 93       	push	r29
 870:	dc 01       	movw	r26, r24
 872:	3a 01       	movw	r6, r20
 874:	86 2e       	mov	r8, r22
 876:	32 2f       	mov	r19, r18
 878:	50 e0       	ldi	r21, 0x00	; 0
 87a:	3f c0       	rjmp	.+126    	; 0x8fa <__stack+0x9b>
 87c:	51 30       	cpi	r21, 0x01	; 1
 87e:	11 f4       	brne	.+4      	; 0x884 <__stack+0x25>
 880:	31 e0       	ldi	r19, 0x01	; 1
 882:	32 0f       	add	r19, r18
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	34 c0       	rjmp	.+104    	; 0x8f0 <__stack+0x91>
 888:	51 11       	cpse	r21, r1
 88a:	17 c0       	rjmp	.+46     	; 0x8ba <__stack+0x5b>
 88c:	ed 01       	movw	r28, r26
 88e:	c3 0f       	add	r28, r19
 890:	d1 1d       	adc	r29, r1
 892:	e8 2c       	mov	r14, r8
 894:	63 01       	movw	r12, r6
 896:	c9 0e       	add	r12, r25
 898:	d1 1c       	adc	r13, r1
 89a:	e1 1c       	adc	r14, r1
 89c:	f6 01       	movw	r30, r12
 89e:	64 91       	lpm	r22, Z
 8a0:	e7 fc       	sbrc	r14, 7
 8a2:	60 81       	ld	r22, Z
 8a4:	70 e0       	ldi	r23, 0x00	; 0
 8a6:	00 2e       	mov	r0, r16
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <__stack+0x4f>
 8aa:	75 95       	asr	r23
 8ac:	67 95       	ror	r22
 8ae:	0a 94       	dec	r0
 8b0:	e2 f7       	brpl	.-8      	; 0x8aa <__stack+0x4b>
 8b2:	88 81       	ld	r24, Y
 8b4:	68 2b       	or	r22, r24
 8b6:	68 83       	st	Y, r22
 8b8:	19 c0       	rjmp	.+50     	; 0x8ec <__stack+0x8d>
 8ba:	ed 01       	movw	r28, r26
 8bc:	c3 0f       	add	r28, r19
 8be:	d1 1d       	adc	r29, r1
 8c0:	e8 2c       	mov	r14, r8
 8c2:	63 01       	movw	r12, r6
 8c4:	c9 0e       	add	r12, r25
 8c6:	d1 1c       	adc	r13, r1
 8c8:	e1 1c       	adc	r14, r1
 8ca:	f6 01       	movw	r30, r12
 8cc:	64 91       	lpm	r22, Z
 8ce:	e7 fc       	sbrc	r14, 7
 8d0:	60 81       	ld	r22, Z
 8d2:	e8 e0       	ldi	r30, 0x08	; 8
 8d4:	f0 e0       	ldi	r31, 0x00	; 0
 8d6:	e0 1b       	sub	r30, r16
 8d8:	f1 09       	sbc	r31, r1
 8da:	70 e0       	ldi	r23, 0x00	; 0
 8dc:	02 c0       	rjmp	.+4      	; 0x8e2 <__stack+0x83>
 8de:	66 0f       	add	r22, r22
 8e0:	77 1f       	adc	r23, r23
 8e2:	ea 95       	dec	r30
 8e4:	e2 f7       	brpl	.-8      	; 0x8de <__stack+0x7f>
 8e6:	88 81       	ld	r24, Y
 8e8:	68 2b       	or	r22, r24
 8ea:	68 83       	st	Y, r22
 8ec:	3a 5f       	subi	r19, 0xFA	; 250
 8ee:	9f 5f       	subi	r25, 0xFF	; 255
 8f0:	98 30       	cpi	r25, 0x08	; 8
 8f2:	50 f2       	brcs	.-108    	; 0x888 <__stack+0x29>
 8f4:	00 23       	and	r16, r16
 8f6:	21 f0       	breq	.+8      	; 0x900 <__stack+0xa1>
 8f8:	5f 5f       	subi	r21, 0xFF	; 255
 8fa:	52 30       	cpi	r21, 0x02	; 2
 8fc:	08 f4       	brcc	.+2      	; 0x900 <__stack+0xa1>
 8fe:	be cf       	rjmp	.-132    	; 0x87c <__stack+0x1d>
 900:	df 91       	pop	r29
 902:	cf 91       	pop	r28
 904:	0f 91       	pop	r16
 906:	ef 90       	pop	r14
 908:	df 90       	pop	r13
 90a:	cf 90       	pop	r12
 90c:	8f 90       	pop	r8
 90e:	7f 90       	pop	r7
 910:	6f 90       	pop	r6
 912:	08 95       	ret

Disassembly of section .text.notificationIconsProcessor:

000009be <notificationIconsProcessor>:
 9be:	ef 92       	push	r14
 9c0:	ff 92       	push	r15
 9c2:	0f 93       	push	r16
 9c4:	cf 93       	push	r28
 9c6:	df 93       	push	r29
 9c8:	cd b7       	in	r28, 0x3d	; 61
 9ca:	de b7       	in	r29, 0x3e	; 62
 9cc:	e0 97       	sbiw	r28, 0x30	; 48
 9ce:	0f b6       	in	r0, 0x3f	; 63
 9d0:	f8 94       	cli
 9d2:	de bf       	out	0x3e, r29	; 62
 9d4:	0f be       	out	0x3f, r0	; 63
 9d6:	cd bf       	out	0x3d, r28	; 61
 9d8:	ce 01       	movw	r24, r28
 9da:	01 96       	adiw	r24, 0x01	; 1
 9dc:	7c 01       	movw	r14, r24
 9de:	80 e3       	ldi	r24, 0x30	; 48
 9e0:	f7 01       	movw	r30, r14
 9e2:	11 92       	st	Z+, r1
 9e4:	8a 95       	dec	r24
 9e6:	e9 f7       	brne	.-6      	; 0x9e2 <notificationIconsProcessor+0x24>
 9e8:	00 e0       	ldi	r16, 0x00	; 0
 9ea:	25 e0       	ldi	r18, 0x05	; 5
 9ec:	40 e0       	ldi	r20, 0x00	; 0
 9ee:	53 e0       	ldi	r21, 0x03	; 3
 9f0:	60 e0       	ldi	r22, 0x00	; 0
 9f2:	c7 01       	movw	r24, r14
 9f4:	0e 94 2f 04 	call	0x85e	; 0x85e <notificationIconFormatter>
 9f8:	06 e0       	ldi	r16, 0x06	; 6
 9fa:	23 e0       	ldi	r18, 0x03	; 3
 9fc:	40 ef       	ldi	r20, 0xF0	; 240
 9fe:	52 e0       	ldi	r21, 0x02	; 2
 a00:	60 e0       	ldi	r22, 0x00	; 0
 a02:	c7 01       	movw	r24, r14
 a04:	0e 94 2f 04 	call	0x85e	; 0x85e <notificationIconFormatter>
 a08:	04 e0       	ldi	r16, 0x04	; 4
 a0a:	22 e0       	ldi	r18, 0x02	; 2
 a0c:	48 ef       	ldi	r20, 0xF8	; 248
 a0e:	52 e0       	ldi	r21, 0x02	; 2
 a10:	60 e0       	ldi	r22, 0x00	; 0
 a12:	c7 01       	movw	r24, r14
 a14:	0e 94 2f 04 	call	0x85e	; 0x85e <notificationIconFormatter>
 a18:	02 e0       	ldi	r16, 0x02	; 2
 a1a:	21 e0       	ldi	r18, 0x01	; 1
 a1c:	48 e0       	ldi	r20, 0x08	; 8
 a1e:	53 e0       	ldi	r21, 0x03	; 3
 a20:	60 e0       	ldi	r22, 0x00	; 0
 a22:	c7 01       	movw	r24, r14
 a24:	0e 94 2f 04 	call	0x85e	; 0x85e <notificationIconFormatter>
 a28:	00 e0       	ldi	r16, 0x00	; 0
 a2a:	20 e0       	ldi	r18, 0x00	; 0
 a2c:	48 ee       	ldi	r20, 0xE8	; 232
 a2e:	52 e0       	ldi	r21, 0x02	; 2
 a30:	60 e0       	ldi	r22, 0x00	; 0
 a32:	c7 01       	movw	r24, r14
 a34:	0e 94 2f 04 	call	0x85e	; 0x85e <notificationIconFormatter>
 a38:	b7 01       	movw	r22, r14
 a3a:	80 e8       	ldi	r24, 0x80	; 128
 a3c:	e1 2c       	mov	r14, r1
 a3e:	04 e0       	ldi	r16, 0x04	; 4
 a40:	20 e3       	ldi	r18, 0x30	; 48
 a42:	48 e0       	ldi	r20, 0x08	; 8
 a44:	0e 94 bd 02 	call	0x57a	; 0x57a <renderGraphics>
 a48:	e0 96       	adiw	r28, 0x30	; 48
 a4a:	0f b6       	in	r0, 0x3f	; 63
 a4c:	f8 94       	cli
 a4e:	de bf       	out	0x3e, r29	; 62
 a50:	0f be       	out	0x3f, r0	; 63
 a52:	cd bf       	out	0x3d, r28	; 61
 a54:	df 91       	pop	r29
 a56:	cf 91       	pop	r28
 a58:	0f 91       	pop	r16
 a5a:	ff 90       	pop	r15
 a5c:	ef 90       	pop	r14
 a5e:	08 95       	ret

Disassembly of section .text.numberDisplayTest:

00000af6 <numberDisplayTest>:
 af6:	ef 92       	push	r14
 af8:	0f 93       	push	r16
 afa:	1f 93       	push	r17
 afc:	cf 93       	push	r28
 afe:	df 93       	push	r29
 b00:	cd b7       	in	r28, 0x3d	; 61
 b02:	de b7       	in	r29, 0x3e	; 62
 b04:	c0 54       	subi	r28, 0x40	; 64
 b06:	d1 09       	sbc	r29, r1
 b08:	0f b6       	in	r0, 0x3f	; 63
 b0a:	f8 94       	cli
 b0c:	de bf       	out	0x3e, r29	; 62
 b0e:	0f be       	out	0x3f, r0	; 63
 b10:	cd bf       	out	0x3d, r28	; 61
 b12:	8e 01       	movw	r16, r28
 b14:	0f 5f       	subi	r16, 0xFF	; 255
 b16:	1f 4f       	sbci	r17, 0xFF	; 255
 b18:	80 e4       	ldi	r24, 0x40	; 64
 b1a:	f8 01       	movw	r30, r16
 b1c:	11 92       	st	Z+, r1
 b1e:	8a 95       	dec	r24
 b20:	e9 f7       	brne	.-6      	; 0xb1c <numberDisplayTest+0x26>
 b22:	20 e4       	ldi	r18, 0x40	; 64
 b24:	a8 01       	movw	r20, r16
 b26:	62 ec       	ldi	r22, 0xC2	; 194
 b28:	72 e0       	ldi	r23, 0x02	; 2
 b2a:	80 e0       	ldi	r24, 0x00	; 0
 b2c:	0e 94 90 01 	call	0x320	; 0x320 <numberGenerator5x8>
 b30:	b8 01       	movw	r22, r16
 b32:	80 e8       	ldi	r24, 0x80	; 128
 b34:	0f 2e       	mov	r0, r31
 b36:	f9 e0       	ldi	r31, 0x09	; 9
 b38:	ef 2e       	mov	r14, r31
 b3a:	f0 2d       	mov	r31, r0
 b3c:	00 e0       	ldi	r16, 0x00	; 0
 b3e:	20 e4       	ldi	r18, 0x40	; 64
 b40:	48 e0       	ldi	r20, 0x08	; 8
 b42:	0e 94 bd 02 	call	0x57a	; 0x57a <renderGraphics>
 b46:	c0 5c       	subi	r28, 0xC0	; 192
 b48:	df 4f       	sbci	r29, 0xFF	; 255
 b4a:	0f b6       	in	r0, 0x3f	; 63
 b4c:	f8 94       	cli
 b4e:	de bf       	out	0x3e, r29	; 62
 b50:	0f be       	out	0x3f, r0	; 63
 b52:	cd bf       	out	0x3d, r28	; 61
 b54:	df 91       	pop	r29
 b56:	cf 91       	pop	r28
 b58:	1f 91       	pop	r17
 b5a:	0f 91       	pop	r16
 b5c:	ef 90       	pop	r14
 b5e:	08 95       	ret

Disassembly of section .text.main:

000006d6 <main>:
 6d6:	0e 94 e5 06 	call	0xdca	; 0xdca <initDebugLED>
 6da:	0e 94 b0 05 	call	0xb60	; 0xb60 <initLCD128X64>
 6de:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <lcdClear>
 6e2:	0e 94 f1 06 	call	0xde2	; 0xde2 <lcdGraphicsMode>
 6e6:	0e 94 8a 04 	call	0x914	; 0x914 <allFrame>
 6ea:	68 94       	set
 6ec:	ee 24       	eor	r14, r14
 6ee:	e1 f8       	bld	r14, 1
 6f0:	04 e0       	ldi	r16, 0x04	; 4
 6f2:	20 e3       	ldi	r18, 0x30	; 48
 6f4:	41 e2       	ldi	r20, 0x21	; 33
 6f6:	64 e8       	ldi	r22, 0x84	; 132
 6f8:	71 e0       	ldi	r23, 0x01	; 1
 6fa:	80 e0       	ldi	r24, 0x00	; 0
 6fc:	0e 94 bd 02 	call	0x57a	; 0x57a <renderGraphics>
 700:	0e 94 f6 06 	call	0xdec	; 0xdec <lcdDrawGraphics>
 704:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <lcdNormalMode>
 708:	42 e0       	ldi	r20, 0x02	; 2
 70a:	60 e0       	ldi	r22, 0x00	; 0
 70c:	80 e0       	ldi	r24, 0x00	; 0
 70e:	0e 94 09 06 	call	0xc12	; 0xc12 <lcdCursorSet>
 712:	68 ec       	ldi	r22, 0xC8	; 200
 714:	72 e0       	ldi	r23, 0x02	; 2
 716:	80 e0       	ldi	r24, 0x00	; 0
 718:	0e 94 8e 06 	call	0xd1c	; 0xd1c <lcdPrint>
 71c:	2f ef       	ldi	r18, 0xFF	; 255
 71e:	83 ed       	ldi	r24, 0xD3	; 211
 720:	90 e3       	ldi	r25, 0x30	; 48
 722:	21 50       	subi	r18, 0x01	; 1
 724:	80 40       	sbci	r24, 0x00	; 0
 726:	90 40       	sbci	r25, 0x00	; 0
 728:	e1 f7       	brne	.-8      	; 0x722 <main+0x4c>
 72a:	00 c0       	rjmp	.+0      	; 0x72c <main+0x56>
 72c:	00 00       	nop
 72e:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <lcdClear>
 732:	0e 94 53 06 	call	0xca6	; 0xca6 <lcdGraphicDisplayClearAll>
 736:	0e 94 f1 06 	call	0xde2	; 0xde2 <lcdGraphicsMode>
 73a:	80 e0       	ldi	r24, 0x00	; 0
 73c:	0e 94 df 04 	call	0x9be	; 0x9be <notificationIconsProcessor>
 740:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <numberDisplayTest>
 744:	e1 2c       	mov	r14, r1
 746:	07 e0       	ldi	r16, 0x07	; 7
 748:	20 e1       	ldi	r18, 0x10	; 16
 74a:	48 e0       	ldi	r20, 0x08	; 8
 74c:	68 ed       	ldi	r22, 0xD8	; 216
 74e:	72 e0       	ldi	r23, 0x02	; 2
 750:	80 e0       	ldi	r24, 0x00	; 0
 752:	0e 94 bd 02 	call	0x57a	; 0x57a <renderGraphics>
 756:	0e 94 f6 06 	call	0xdec	; 0xdec <lcdDrawGraphics>
 75a:	e1 2c       	mov	r14, r1
 75c:	00 e0       	ldi	r16, 0x00	; 0
 75e:	28 e0       	ldi	r18, 0x08	; 8
 760:	48 e0       	ldi	r20, 0x08	; 8
 762:	60 e1       	ldi	r22, 0x10	; 16
 764:	73 e0       	ldi	r23, 0x03	; 3
 766:	80 e0       	ldi	r24, 0x00	; 0
 768:	0e 94 bd 02 	call	0x57a	; 0x57a <renderGraphics>
 76c:	2f ef       	ldi	r18, 0xFF	; 255
 76e:	89 e6       	ldi	r24, 0x69	; 105
 770:	98 e1       	ldi	r25, 0x18	; 24
 772:	21 50       	subi	r18, 0x01	; 1
 774:	80 40       	sbci	r24, 0x00	; 0
 776:	90 40       	sbci	r25, 0x00	; 0
 778:	e1 f7       	brne	.-8      	; 0x772 <main+0x9c>
 77a:	00 c0       	rjmp	.+0      	; 0x77c <main+0xa6>
 77c:	00 00       	nop
 77e:	28 e0       	ldi	r18, 0x08	; 8
 780:	48 e0       	ldi	r20, 0x08	; 8
 782:	68 e1       	ldi	r22, 0x18	; 24
 784:	73 e0       	ldi	r23, 0x03	; 3
 786:	80 e0       	ldi	r24, 0x00	; 0
 788:	0e 94 bd 02 	call	0x57a	; 0x57a <renderGraphics>
 78c:	2f ef       	ldi	r18, 0xFF	; 255
 78e:	89 e6       	ldi	r24, 0x69	; 105
 790:	98 e1       	ldi	r25, 0x18	; 24
 792:	21 50       	subi	r18, 0x01	; 1
 794:	80 40       	sbci	r24, 0x00	; 0
 796:	90 40       	sbci	r25, 0x00	; 0
 798:	e1 f7       	brne	.-8      	; 0x792 <main+0xbc>
 79a:	00 c0       	rjmp	.+0      	; 0x79c <main+0xc6>
 79c:	00 00       	nop
 79e:	dd cf       	rjmp	.-70     	; 0x75a <main+0x84>

Disassembly of section .text.__dummy_fini:

00000e0a <_fini>:
 e0a:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000e0c <__funcs_on_exit>:
 e0c:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000e0e <__simulator_exit>:
 e0e:	08 95       	ret

Disassembly of section .text.exit:

00000da2 <exit>:
 da2:	ec 01       	movw	r28, r24
 da4:	0e 94 06 07 	call	0xe0c	; 0xe0c <__funcs_on_exit>
 da8:	0e 94 05 07 	call	0xe0a	; 0xe0a <_fini>
 dac:	ce 01       	movw	r24, r28
 dae:	0e 94 07 07 	call	0xe0e	; 0xe0e <__simulator_exit>
 db2:	ce 01       	movw	r24, r28
 db4:	0e 94 03 07 	call	0xe06	; 0xe06 <_Exit>

Disassembly of section .text._Exit:

00000e06 <_Exit>:
 e06:	0e 94 58 00 	call	0xb0	; 0xb0 <_exit>
